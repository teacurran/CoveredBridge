quarkus.application.name=covered-bridge
quarkus.log.level=INFO
quarkus.shutdown.timeout=10s
quarkus.datasource.reactive=true
quarkus.datasource.db-kind=postgresql
quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost:7432/covered_bridge
quarkus.datasource.username=pguser
quarkus.datasource.password=pgpass

quarkus.grpc.server.use-separate-server=false
# quarkus.grpc.clients.dissipate.host=localhost
# quarkus.grpc.clients.dissipate.port=9001

# use the 'OpenTelemetryDriver' instead of the one for your database
quarkus.datasource.jdbc.telemetry=true
# quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.physical-naming-strategy=app.coveredbridge.data.jpa.ModelNamingStrategy
quarkus.hibernate-orm.log.sql=true
encryption.key=ouhojJH(*Y()OJKNKJBHUYGUYGIKHBHJBJ

# open telemetry
# quarkus.otel.exporter.otlp.headers=Authorization=Bearer my_secret
#quarkus.otel.exporter.otlp.endpoint=http://jaeger:4317
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317
# quarkus.otel.traces.exporter=otlp
# quarkus.otel.exporter.otlp.traces.timeout=10
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n\n

quarkus.log.category."app.covered-bridge".level=DEBUG
quarkus.log.category."io.opentelemetry".level=DEBUG
# quarkus.log.category."com.datastax".level=DEBUG


# Connecting to Apache Cassandra (R) or DataStax Enterprise (DSE)
# quarkus.cassandra.contact-points=localhost:9042
# quarkus.cassandra.local-datacenter=datacenter1
# quarkus.cassandra.keyspace=k1

# Connecting to DataStax Astra
# https://docs.datastax.com/en/developer/java-driver/latest/manual/cloud/
#quarkus.cassandra.cloud.secure-connect-bundle=/path/to/secure-connect-bundle.zip

# Authentication
# See https://docs.datastax.com/en/developer/java-driver/latest/manual/core/authentication/
#quarkus.cassandra.auth.username=<your username>
#quarkus.cassandra.auth.password=<your password>

# Health Checks
# quarkus.cassandra.health.enabled=true

# Request properties
#quarkus.cassandra.request.timeout=PT10S
#quarkus.cassandra.request.consistency-level=LOCAL_QUORUM
#quarkus.cassandra.request.serial-consistency-level=LOCAL_SERIAL
#quarkus.cassandra.request.page-size=5000
#quarkus.cassandra.request.default-idempotence=true

# Protocol settings
#quarkus.cassandra.protocol.compression=none

# Startup and Initialization settings
#quarkus.cassandra.init.eager-init=false
#quarkus.cassandra.init.eager-init-timeout=PT10S
#quarkus.cassandra.init.print-eager-init-info=true
#quarkus.cassandra.init.reconnect-on-init=true
#quarkus.cassandra.init.resolve-contact-points=false
#quarkus.cassandra.init.use-quarkus-event-loop=true

# Logging
#quarkus.log.level=INFO
#quarkus.log.min-level=DEBUG
#quarkus.log.category."com.datastax.oss.quarkus".level=INFO
#quarkus.log.category."com.datastax.oss.driver".level=INFO
#quarkus.log.category."com.datastax.dse.driver".level=INFO

# More info about how to configure the DataStax Java driver:
# https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/

quarkus.tls.trust-all=true
